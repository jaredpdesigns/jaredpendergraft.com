@import url("https://use.typekit.net/zkw5aru.css");

:root {
  @each $key, $value in $colors {
    --color__#{$key}: #{$value};
  }
  @each $key, $value in $sizes {
    --size__#{$key}: #{$value};
  }
  --shadow: #{0 var(--size__m) var(--size__l) rem(-16) rgba(0, 0, 0, 0.25)};
  --typeFamily__primary: "lft-etica", -apple-system, BlinkMacSystemFont,
    "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Helvetica Neue", Arial,
    sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    sans-serif;
  --typeFamily__secondary: "arlette", -apple-system, BlinkMacSystemFont,
    "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Helvetica Neue", Arial,
    sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    sans-serif;
  @each $key, $value in $type__lineheights {
    --typeLineheight__#{$key}: #{$value};
  }
  @each $key, $value in $type__sizes {
    --typeSize__#{$key}: #{$value};
  }
  &[theme="dark"] {
    @each $key, $value in $colors-dark {
      --color__#{$key}: #{$value};
    }
    --shadow: #{0 var(--size__m) var(--size__l) rem(-16) black};
  }
}

html {
  background-color: var(--color__contrast);
  color: var(--color__base);
  font-family: var(--typeFamily__primary);
  font-size: 100%;
  padding-top: calc(var(--size__xl) * 2);
  @include breakpoint(xsl) {
    padding-top: var(--size__xl);
  }
  @media print {
    padding-top: 0;
  }
}

::selection {
  background-color: var(--color__brand);
  color: white;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-variant-numeric: lining-nums;
}

h1,
h3 {
  font-family: var(--typeFamily__secondary);
  font-feature-settings: "kern", "liga", "clig", "calt";
}
h4,
h5 {
  font-weight: 600;
}
h1 {
  font-size: var(--typeSize__xxl);
  line-height: var(--typeLineheight__xl);
}
h2 {
  font-size: var(--typeSize__xl);
  line-height: var(--typeLineheight__xl);
}
h3 {
  font-size: var(--typeSize__l);
  line-height: var(--typeLineheight__l);
}
h5 {
  font-size: var(--typeSize__s);
  line-height: var(--typeLineheight__m);
}
h4,
p,
li {
  font-size: var(--typeSize__m);
  font-feature-settings: "kern", "liga", "clig", "calt", "onum", "pnum", "frac";
  font-variant-ligatures: common-ligatures contextual;
  line-height: var(--typeLineheight__l);
}
p {
  line-height: var(--typeLineheight__xl);
}
ul,
ol {
  li {
    list-style: none;
    position: relative;
    + li {
      margin-top: var(--size__m);
    }
  }
  li:before {
    color: var(--color__brand);
    display: inline-block;
  }
}

ol {
  counter-reset: custom-counter;
  li {
    padding-left: calc(var(--size__l) + var(--size__s));
    @include breakpoint(xsl) {
      padding-left: 0;
    }
    &:before {
      content: counter(custom-counter) ".";
      counter-increment: custom-counter;
      display: inline-block;
      left: 0;
      position: absolute;
      text-align: right;
      width: calc(var(--size__m) + var(--size__s));
      @include breakpoint(xsl) {
        left: rem(-32);
      }
    }
    ol {
      margin-top: var(--size__m);
      padding-left: calc(var(--size__l) + var(--size__s));
      li:before {
        content: counter(custom-counter, lower-alpha) ".";
        @include breakpoint(xsl) {
          left: rem(-40);
        }
      }
      ol {
        padding-left: var(--size__l);
        li:before {
          content: counter(custom-counter, lower-roman) ".";
          @include breakpoint(xsl) {
            left: rem(-40);
          }
        }
      }
    }
  }
}

ul li {
  padding-left: calc(var(--size__m) + var(--size__s));
  @include breakpoint(xsl) {
    padding-left: 0;
  }
  &:before {
    content: "c";
    display: inline-block;
    font-family: var(--typeFamily__secondary);
    font-feature-settings: "ss01";
    font-size: var(--typeSize__s);
    left: 0;
    position: absolute;
    @include breakpoint(xsl) {
      left: rem(-32);
    }
  }
}

@supports not (font-feature-settings: "ss01") {
  ul li:before {
    content: "c";
    font-size: var(--typeSize__m);
  }
}

a,
button {
  @include smooth;
}

p a {
  border-bottom: rem(1) solid var(--color__brand);
  &:focus {
    background-color: var(--color__tertiary);
  }
}

hr {
  background-color: var(--color__base-light);
  border-radius: calc(var(--size__xs) / 2);
  display: inline-block;
  height: var(--size__xs);
  width: var(--size__xl);
  @media print {
    border-bottom: rem(4) solid;
  }
}

blockquote {
  border: rem(1) solid var(--color__base-ghost);
  border-left-color: var(--color__brand);
  border-left-width: var(--size__xs);
  border-radius: var(--size__xs);
  color: var(--color__base-mid);
  padding-bottom: var(--size__m);
  padding-left: var(--size__l);
  padding-top: var(--size__m);
}
