<section class="codeBlock flow__grid">
  <nav class="flow__inline">
    <label webc:for="(item, index) of ['Demo', 'HTML', 'CSS', 'JS']"
      class="border__left border__top border__right radius__tl--xs radius__tr--xs" for="demo">
      <input type="radio" :id="item.toLowerCase()" name="demo" :value="item" :checked="index === 0">
      <span
        class="color__type--base--mid flow__inline flow__align--block-center flow__align--inline-center padding__inline--m type__family--tertiary type__size--s-m"
        @text="item"></span>
    </label>
  </nav>
  <slot></slot>
</section>

<style>
  .codeBlock {

    justify-items: center;

    >* {
      min-inline-size: 0;
      inline-size: 100%;
    }

    &:has(#html:checked),
    &:has(#css:checked),
    &:has(#js:checked) {
      >figure {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }
    }

    pre {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
      display: none;
    }

    &:has(#html:checked) {
      pre:first-of-type {
        display: block;
      }
    }

    &:has(#css:checked) {
      pre:nth-of-type(2) {
        display: block;
      }
    }

    &:has(#js:checked) {
      pre:last-of-type {
        display: block;
      }
    }

    >nav {
      inline-size: auto;

      label {
        align-items: stretch;
        block-size: var(--size__l);
        border-color: transparent;
        display: grid;
        justify-items: stretch;
        position: relative;

        >* {
          grid-area: 1/1;
        }

        input {
          --outline__offset: calc(var(--size__xs) * -1);
          appearance: none;
          cursor: pointer;
          opacity: 0;
          position: relative;
        }

        &:has(input:checked) {
          border-color: var(--color__base--light);

          span {
            color: var(--color__base);
          }

          &:before {
            --size: var(--size__xxs);
            background-color: var(--color__contrast);
            block-size: var(--size);
            content: '';
            display: block;
            inset-block-end: calc(var(--size) * -1);
            inset-inline: 0;
            position: absolute;
          }
        }
      }
    }
  }
</style>