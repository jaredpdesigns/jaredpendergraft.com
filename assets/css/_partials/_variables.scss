// Functions

@function tint($color, $percent) { @return mix(#fff, $color, $percent); }
@function shade($color, $percent) { @return mix(#000, $color, $percent); }

// Variables

$type-xs:   14;
$type-s:    16;
$type-m:    18;
$type-ml:   20;
$type-l:    22;
$type-xl:   24;
$type-xxl:  27;
$type-xxxl: 32;
$type-baseline: 24;

$type-sans:  'GT Pressura', sans-serif;
$type-serif: 'GT Sectra', serif;
$type-mono:  'GT Cinetype Mono', monospace;


$color-base: #4E5250;
$color-highlight: #8CADA2;
$color-luma: #FFF;

// $color-base Tints & Shades
$color-base-dark:   shade($color-base,31.25%);
$color-base-ish:     tint($color-base,25%);
$color-base-mid:     tint($color-base,50%);
$color-base-light:   tint($color-base,75%);
$color-base-ghost:   tint($color-base,95%);

// $color-highlight Tints & Shades
$color-highlight-dark:   shade($color-highlight,10%);
$color-highlight-ish:     tint($color-highlight,25%);
$color-highlight-mid:     tint($color-highlight,50%);
$color-highlight-light:   tint($color-highlight,75%);
$color-highlight-ghost:   tint($color-highlight,95%);

// $color-luma Opacity Scale
$color-luma-ish-o:   rgba($color-luma,0.75);
$color-luma-mid-o:   rgba($color-luma,0.5);
$color-luma-light-o: rgba($color-luma,0.25);
$color-luma-ghost-o: rgba($color-luma,0.10);

$space-xs: 0.375rem;
$space-s:  0.75rem;
$space-m:  1.5rem;
$space-l:  3rem;
$space-xl: 4.5rem;

$grid-1-6: percentage(1/6);
$grid-1-4: percentage(1/4);
$grid-1-3: percentage(1/3);
$grid-1-2: percentage(1/2);
$grid-2-3: percentage(2/3);
$grid-3-4: percentage(3/4);

$border: 0.0625rem solid;
$border-big: $space-xs/2 solid;
$border-huge: $space-xs solid;

// Mixins

@mixin bp($point) {
	@if      $point == xs  { @media (min-width: 1em) and (max-width: 46em) { @content; } }
	@else if $point == xsl { @media (min-width: 29em)  { @content; } }
	@else if $point == s   { @media (min-width: 47em)  { @content; } }
	@else if $point == m   { @media (min-width: 63em)  { @content; } }
	@else if $point == l   { @media (min-width: 79em)  { @content; } }
	@else if $point == ml  { @media (min-width: 89em)  { @content; } }
	@else if $point == xl  { @media (min-width: 99em)  { @content; } }
	@else if $point == xxl { @media (min-width: 101em) { @content; } }
}

@mixin left { float: left; }

@mixin right { float: right; }

@mixin spacer-all {
  padding: $space-s;
  @include bp(m) { padding: $space-m; }
  @include bp(l) { padding: $space-m $space-s; }
  @include bp(xl) { padding: ($space-m + $space-s) $space-m; }
}
@mixin spacer-vertical {
  padding: $space-m 0;
  @include bp(xl) { padding: ($space-m + $space-s) 0; }
}

@mixin type($px,$lh: 1.5) {
  font-size: ($px/16)+rem;
  line-height: ($lh*$type-baseline)/($px);
}

@mixin type-xs {
	@include type($type-xs);
	@include bp(xl) { @include type($type-s); }
}
@mixin type-s {
	@include type($type-s);
	@include bp(xl) { @include type($type-m); }
}
@mixin type-m	 {
  @include type($type-m);
  @include bp(xs) { @include type($type-s,1); }
  @include bp(xl) { @include type($type-ml); }
}
@mixin type-ml	 {
  @include type($type-ml);
  @include bp(xs) { @include type($type-m); }
  @include bp(xl) { @include type($type-l); }
}
@mixin type-l {
	@include type($type-l);
	@include bp(xs) { @include type($type-ml) }
	@include bp(xl) { @include type($type-xl); }
}
@mixin type-xl {
	@include type($type-xl);
	@include bp(xs) { @include type($type-l,1.25); }
	@include bp(xl) { @include type($type-xxl); }
}
@mixin type-xxl {
	@include type($type-xxl);
	@include bp(xs) { @include type($type-xl); }
	@include bp(xl) { @include type($type-xxxl,2); }
}
	
@mixin type-sans { font-family: $type-sans; }

@mixin type-serif { font-family: $type-serif; }

@mixin type-mono { font-family: $type-mono; }

@mixin type-bold { font-weight: bold; }

@mixin type-italic { font-style: italic; }

@mixin type-caps { text-transform: uppercase; letter-spacing: 0.0625rem; }

@mixin type-center {
  text-align: center;
  img { margin-left: auto; margin-right: auto; }
}

@mixin type-left { text-align: left; }

@mixin type-right { text-align: right; }

@mixin type-legible {
  @include bp(s)  { max-width: 87.5%; margin-left: auto; margin-right: auto; }
  @include bp(m)  { max-width: 75%; }
  @include bp(xl) { max-width: 62.5%; }
}

@mixin type-legible-tight {
  @include bp(s)  { max-width: 75%; margin-left: auto; margin-right: auto; }
  @include bp(m)  { max-width: 62.5%; }
  @include bp(xl) { max-width: 50%; }
}

@mixin type-ot-numbers-old {
    font-variant-numeric: oldstyle-nums;
     -moz-font-feature-settings: "onum";
      -ms-font-feature-settings: "onum";
  -webkit-font-feature-settings: "onum";
          font-feature-settings: "onum";
}
@mixin type-ot-all-small {
  font-variant-caps: all-small-caps;
     -moz-font-feature-settings: "c2sc", "smcp";
      -ms-font-feature-settings: "c2sc", "smcp";
  -webkit-font-feature-settings: "c2sc", "smcp";
          font-feature-settings: "c2sc", "smcp";
}

@mixin smooth { transition: all 0.375s ease-in; }
@mixin smooth-fast { transition: all 0.1875s ease-in; }
@mixin smooth-pop { transition: all 0.5s cubic-bezier(0.5, 0.1, 0, 1.2); }

@mixin inline {
  display: inline-block;
  + * {
    margin-left: $space-s;
    @include bp(l) { margin-left: $space-m; }
  }
}

@mixin oomph {
  margin-top: $space-s;
  @include bp(ml) { margin-top: $space-m; }
}

@mixin oomph-big {
  margin-top: $space-m;
  @include bp(ml) { margin-top: $space-l; }
}

@mixin oomph-small {
  margin-top: $space-xs;
  @include bp(ml) { margin-top: $space-s; }
}

@mixin fill {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
}

@mixin center-vertical {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  transform: translateY(-50%);
}

@mixin shade-small {
  box-shadow: 0 0.1875rem 0.375rem -0.1875rem rgba(#000,0.25);
}

@mixin shade-big {
  box-shadow: 0 0.375rem 0.75rem -0.375rem rgba(#000,0.5);
}

@mixin loading {
  background-image: url('../img/projects/loading.svg');
  background-position: center center;
  background-repeat: no-repeat;
}